{"version":3,"file":"static/js/756.2ac5b280.chunk.js","mappings":"sMAsGA,IA/FiB,SAACA,GAChB,OAAmCC,EAAAA,EAAAA,IAAQ,CACzCC,cAAe,CACbC,SAAU,GACVC,SAAU,MAHNC,EAAQ,EAARA,SAAUC,EAAY,EAAZA,aAOZC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,IAAxDC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAgCnB,OA5BAC,EAAAA,EAAAA,YACE,WACE,OAAO,WACLT,GAASU,EAAAA,EAAAA,MACX,CACF,GAEA,KAEFD,EAAAA,EAAAA,YAAU,WACJD,IACFG,EAAAA,GAAAA,MAAYlB,EAAMmB,cAClBZ,GAASU,EAAAA,EAAAA,QAEPH,IACFI,EAAAA,GAAAA,QAAclB,EAAMoB,gBACpBb,GAASU,EAAAA,EAAAA,OACTR,EAAST,EAAMqB,cAEnB,GAAG,CACDP,EACAC,EACAN,EACAF,EACAP,EAAMmB,aACNnB,EAAMoB,eACNpB,EAAMqB,gBAGN,gBAAKC,UAAU,gCAA+B,UAC5C,gBAAKA,UAAU,6EAA4E,UACzF,kBACEA,UAAU,aACVC,SAAUjB,GApCD,SAACkB,GAChBjB,EAASP,EAAMyB,WAAWD,GAC5B,IAmCQE,OAAO,OAAM,WAEb,gBAAIJ,UAAU,oDAAmD,UAAC,QAC1DtB,EAAM2B,OAAO,uBAErB,iBAAKL,UAAU,OAAM,WACnB,kBAAOA,UAAU,gCAA+B,SAAC,YACjD,0BACEM,KAAK,QACLC,KAAK,QACLC,GAAG,QACHC,YAAY,iBACZT,UAAU,wGACNjB,EAAS,kBAGjB,iBAAKiB,UAAU,OAAM,WACnB,kBAAOA,UAAU,gCAA+B,SAAC,eACjD,0BACEM,KAAK,WACLC,KAAK,WACLC,GAAG,WACHC,YAAY,SACZT,UAAU,wGACNjB,EAAS,eAEf,mBACEuB,KAAK,SACLN,UAAU,oHAAmH,SAE5HtB,EAAMgC,iBAGX,kBACChC,EAAMiC,aAAa,IAAE,KACtB,SAAC,KAAI,CACHC,GAAIlC,EAAMmC,iBACVb,UAAU,mDAAkD,SAE3DtB,EAAMoC,sBAMnB,C,sEC/EA,UAhBiB,WACf,OACE,SAAC,IAAQ,CACPX,WAAYY,EAAAA,GACZV,OAAO,KACPM,aAAa,qBACbE,iBAAiB,IACjBH,WAAW,WACXI,cAAc,QACdhB,eAAe,0BACfC,aAAa,IACbF,aAAa,wCAGnB,C","sources":["components/ui/AuthCard.js","pages/Register.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { reset } from \"../../features/auth/authSlice\";\r\n\r\nconst AuthCard = (props) => {\r\n  const { register, handleSubmit } = useForm({\r\n    defaultValues: {\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { isSuccess, isError } = useSelector((state) => state.auth);\r\n  const onSubmit = (data) => {\r\n    dispatch(props.dispatcher(data));\r\n  };\r\n  useEffect(\r\n    () => {\r\n      return () => {\r\n        dispatch(reset());\r\n      };\r\n    },\r\n    // eslint-disable-next-line\r\n    []\r\n  );\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error(props.errorMessage);\r\n      dispatch(reset());\r\n    }\r\n    if (isSuccess) {\r\n      toast.success(props.successMessage);\r\n      dispatch(reset());\r\n      navigate(props.afterSuccess);\r\n    }\r\n  }, [\r\n    isSuccess,\r\n    isError,\r\n    navigate,\r\n    dispatch,\r\n    props.errorMessage,\r\n    props.successMessage,\r\n    props.afterSuccess,\r\n  ]);\r\n  return (\r\n    <div className=\"h-[100%]  flex justify-center\">\r\n      <div className=\"py-6 px-8 max-2-sm max-2-lg mt-10 rounded shadow-xl border border-blue-500\">\r\n        <form\r\n          className=\"space-y-6 \"\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          method=\"POST\"\r\n        >\r\n          <h3 className=\"text-xl font-medium text-gray-900 dark:text-white\">\r\n            Sign {props.upOrIn} to our platform\r\n          </h3>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-800 font-bold\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              placeholder=\"user@email.com\"\r\n              className=\"w-full border border-gray-300 py-2 pl-3 rounded mt-2 outline-none focus:ring-blue-600 :ring-blue-600\"\r\n              {...register(\"username\")}\r\n            />\r\n          </div>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-800 font-bold\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"******\"\r\n              className=\"w-full border border-gray-300 py-2 pl-3 rounded mt-2 outline-none focus:ring-blue-600 :ring-blue-600\"\r\n              {...register(\"password\")}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"cursor-pointer py-2 px-4 block mt-6 bg-blue-500 hover:bg-blue-600 text-white font-bold w-full text-center rounded\"\r\n            >\r\n              {props.buttonName}\r\n            </button>\r\n          </div>\r\n          <br />\r\n          {props.alreadyOrNot}?{\" \"}\r\n          <Link\r\n            to={props.alreadyOrNotPath}\r\n            className=\"text-blue-700 hover:underline dark:text-blue-500\"\r\n          >\r\n            {props.createOrLogin}\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthCard;\r\n","import React from \"react\";\r\n\r\nimport { registerUser } from \"../features/auth/authSlice\";\r\nimport AuthCard from \"../components/ui/AuthCard\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <AuthCard\r\n      dispatcher={registerUser}\r\n      upOrIn=\"up\"\r\n      alreadyOrNot=\"Already registered\"\r\n      alreadyOrNotPath=\"/\"\r\n      buttonName=\"Register\"\r\n      createOrLogin=\"Login\"\r\n      successMessage=\"Registered successfully\"\r\n      afterSuccess=\"/\"\r\n      errorMessage=\"Register is failed, please try again\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["props","useForm","defaultValues","username","password","register","handleSubmit","dispatch","useDispatch","navigate","useNavigate","useSelector","state","auth","isSuccess","isError","useEffect","reset","toast","errorMessage","successMessage","afterSuccess","className","onSubmit","data","dispatcher","method","upOrIn","type","name","id","placeholder","buttonName","alreadyOrNot","to","alreadyOrNotPath","createOrLogin","registerUser"],"sourceRoot":""}